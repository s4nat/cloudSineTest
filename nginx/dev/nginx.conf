# nginx/dev/nginx.conf

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log debug; # More detailed logging for development
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Development-specific logging
    log_format dev_format '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"'
                         ' $request_time';
    
    access_log /var/log/nginx/access.log dev_format;

    # Development server configuration
    server {
        listen 80;
        server_name localhost;

        # Increased header size for development (helpful for auth tokens)
        large_client_header_buffers 4 32k;

        # Frontend
        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Development-specific headers
            add_header X-Debug-Message "Proxied to frontend" always;
        }

        # Backend API
        location /api/ {
            proxy_pass http://backend:8080/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Development-specific headers
            add_header X-Debug-Message "Proxied to backend" always;

            # File upload settings
            client_max_body_size 50M;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 'healthy\n';
        }
    }
}